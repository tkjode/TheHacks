version: '3'
services:
  # Games -----------------------------
#  valheim:
#    container_name: valheim
#    image: lloesche/valheim-server
#    volumes:
#      - "/mnt/STOR-EL/flexo/valheim/:/config"
#    environment:
#      SERVER_NAME: BGIS BattleBjorn
#      WORLD_NAME: Battleplains
#      SERVER_PASS: ${VALHEIM_SERVER_PASS}
#    ports:
#      - 2456-2458:2456-2458/udp
#    restart: unless-stopped

  valheim_tng:
    container_name: valheim-plus
    image: lloesche/valheim-server
    volumes:
      - "/mnt/STOR-EL/flexo/valheim-plus/:/config"
    environment:
      SERVER_NAME: BGIS Legends
      WORLD_NAME: Ragnarok
      SERVER_PASS: ${VALHEIM_SERVER_PASS}
      BEPINEX: "true"
      BACKUPS_IF_IDLE: "false"
    ports:
      - 2456-2458:2456-2458/udp
    restart: unless-stopped


  # ElasticSearch and Kibana Services -------------
  esnode:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2-amd64
    volumes:
      - "/mnt/STOR-EL/flexo/elasticsearch:/usr/share/elasticsearch/data"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ports:
      - 9200:9200
    restart: unless-stopped

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.10.2
    depends_on:
      - "esnode"
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      LOGGING_JSON: "true"
      LOGGING_QUIET: "true"
      SERVER_HOST: kibana
    ports:
      - 5601:5601
    extra_hosts:
      - "flexo:10.0.0.5"
    restart: unless-stopped
    

  # Docker Management Services ---------------

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    environment:
      WATCHTOWER_SCHEDULE: 0 0 5 * * 1-5
      TZ: America/Toronto
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
 
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    ports: 
      - "9000:9000"
      - "8000:8000"
    volumes:
      - portainerData:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
   

  # Home Media Services  ------------------

  sabnzbd:
    container_name: sabnzbd
    image: linuxserver/sabnzbd:latest
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Toronto
    volumes:
      - /home/xbmc/docker-conf-volumes/sabnzbd:/config
      - /mnt/STOR-EL/Automation:/downloads
    ports:
      - 5000:8080
    restart: unless-stopped

  radarr:
    container_name: radarr
    image: linuxserver/radarr:amd64-latest
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Toronto
    volumes:
      - /home/xbmc/docker-conf-volumes/radarr:/config
      - /mnt/STOR-EL/Movies:/movies
      - /mnt/STOR-EL/Automation/radarr:/downloads
      - /home/xbmc/Scripts:/notificationScripts
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Toronto
    volumes:
      - /home/xbmc/docker-conf-volumes/sonarr:/config
      - /mnt/STOR-EL/TV Shows:/tv
      - /mnt/STOR-EL/Automation/sonarr:/downloads
      - /home/xbmc/Scripts:/notificationScripts
    ports:
      - 8989:8989
    restart: unless-stopped


  # Monitoring --------------------------

  blackbox_exporter:
    container_name: blackbox_exporter
    image: prom/blackbox-exporter:master
    ports: 
      - "9115:9115"
    network_mode: "host"
    restart: unless-stopped

  apcupsd_exporter:
    container_name: apcupsd_exporter
    image: frostman/apcupsd-exporter
    ports:
      - "9162:9162"
    network_mode: "host"
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - "grafana-storage:/var/lib/grafana"
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-piechart-panel,jdbranham-diagram-panel
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASS}
      GF_AUTH_ANONYMOUS_ENABLED: "true"

  node_exporter:
    container_name: node_exporter
    image: prom/node-exporter
    ports:
      - "9100:9100"
    restart: unless-stopped
    network_mode: "host"
    pid: "host"
    volumes:
      - /mnt/STOR-EL/:/STOR-EL

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    command:
      - "--storage.tsdb.retention=365d"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - "/root/dockerRun/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"

  sabnzbd_exporter:
    container_name: sab_exporter
    image: msroest/sabnzbd_exporter
    ports:
      - "9387:9387"
    restart: unless-stopped
    environment:
      SABNZBD_APIKEY: ${SABNZBD_API_KEY}
      SABNZBD_BASEURL: http://10.0.0.5:5000


  # Home Productivity Services -----------------

  kanboard:
    container_name: kanboard
    image: kanboard/kanboard:latest
    ports:
      - "3080:80"
    restart: unless-stopped

  teedy:
    container_name: teedy
    image: jdreinhardt/teedy:latest
    ports:
      - "10080:8080"
    restart: unless-stopped
    volumes:
      - "/mnt/STOR-EL/flexo/teedy:/data"

  taskd:
    container_name: taskd
    hostname: flexo
    image: andir/docker-taskd
    restart: unless-stopped
    ports:
      - "53589:53589"
    volumes:
      - "taskdpersist:/var/taskd"
      - "/mnt/STOR-EL/flexo/taskd/clients:/clients"
      - "/mnt/STOR-EL/flexo/taskd/ssl_config.vars:/var/taskd/pki/vars"
    environment:
      CLIENT_CERT_PATH: /clients

  taskweb:
    container_name: taskweb
    image: jeckel/taskwarrior-web
    restart: unless-stopped
    extra_hosts:
      - "flexo:10.0.0.5"
    ports:
      - "5678:5678"
    environment:
      TASKD_SERVER: flexo:53589
      TASKD_CREDENTIALS: PhalNet/tkjode/302bea50-fea6-4e4a-ae86-fbd1bbe6e4c0
      CLIENT_CERT_PATH: /clients
    volumes:
      - "/mnt/STOR-EL/flexo/taskd/clients/tkjode.cert.pem:/clients/client.cert.pem"
      - "/mnt/STOR-EL/flexo/taskd/clients/tkjode.key.pem:/clients/client.key.pem"
      - "/mnt/STOR-EL/flexo/taskd/clients/ca.cert.pem:/clients/ca.cert.pem"

volumes:
  grafana-storage:
  taskdpersist:
  portainerData:
  esdata:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/STOR-EL/flexo/elasticsearch
